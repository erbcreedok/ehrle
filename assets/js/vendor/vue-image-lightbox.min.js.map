{"version":3,"sources":["webpack://Lightbox/webpack/universalModuleDefinition","webpack://Lightbox/webpack/bootstrap","webpack://Lightbox/./node_modules/hammerjs/hammer.js","webpack://Lightbox/./src/components/template.html","webpack://Lightbox/./src/components/script.js","webpack://Lightbox/./src/components/LightBox.vue","webpack://Lightbox/./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","document","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","rotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","srcEvent","emit","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","touches","all","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","t","dx","dy","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","handlers","oldCssProps","inputClass","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","INPUT_MOVE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","render","_vm","_h","$createElement","_c","_self","click","$event","stopPropagation","closeLightBox","images","directives","rawName","lightBoxOn","expression","ref","staticClass","_v","attrs","title","closeText","_t","staticStyle","fill","width","height","viewBox","d","mode","select","srcset","alt","caption","showCaption","domProps","innerHTML","_s","current","total","showThumbs","previousThumbText","previousImage","_e","_l","imagesThumb","image","thumbIndex","begin","class","showImage","nextThumbText","nextImage","previousText","nextText","_withStripped","require","component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_injectStyles","originalRender","h","beforeCreate","required","disableScroll","Boolean","default","showLightBox","startAt","Number","nThumbs","autoPlay","autoPlayTime","siteLoading","lengthToLoadMore","String","timer","computed","halfDown","floor","map","thumb","loading","error","watch","onToggleLightBox","$emit","mounted","setInterval","$refs","container","hammer","methods","querySelector","classList","addKeyEvent","$set","keyCode","beforeDestroy","clearInterval","__file","c","getter","o","defineProperty","enumerable","r","Symbol","toStringTag","__esModule","ns","bind","n","object","p","s","moduleId","l","modules"],"mappings":"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","file":"vue-image-lightbox.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lightbox\"] = factory();\n\telse\n\t\troot[\"Lightbox\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      on: {\n        click: function($event) {\n          $event.stopPropagation()\n          return _vm.closeLightBox($event)\n        }\n      }\n    },\n    [\n      _vm.images && _vm.images.length > 0\n        ? _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.lightBoxOn,\n                  expression: \"lightBoxOn\"\n                }\n              ],\n              ref: \"container\",\n              staticClass: \"vue-lb-container\"\n            },\n            [\n              _c(\"div\", { staticClass: \"vue-lb-content\" }, [\n                _c(\"div\", { staticClass: \"vue-lb-header\" }, [\n                  _c(\"span\"),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"vue-lb-button-close\",\n                      attrs: { type: \"button\", title: _vm.closeText }\n                    },\n                    [\n                      _vm._t(\"close\", [\n                        _c(\"span\", [\n                          _c(\n                            \"svg\",\n                            {\n                              staticStyle: {\n                                \"enable-background\": \"new 0 0 512 512\"\n                              },\n                              attrs: {\n                                fill: \"white\",\n                                x: \"0px\",\n                                y: \"0px\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 512 512\"\n                              }\n                            },\n                            [\n                              _c(\"path\", {\n                                attrs: {\n                                  d:\n                                    \"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ],\n                    2\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"vue-lb-figure\",\n                    on: {\n                      click: function($event) {\n                        $event.stopPropagation()\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"transition\",\n                      { attrs: { mode: \"out-in\", name: \"fade\" } },\n                      [\n                        _c(\"img\", {\n                          key: _vm.images[_vm.select].src,\n                          staticClass: \"vue-lb-modal-image\",\n                          attrs: {\n                            src: _vm.images[_vm.select].src,\n                            srcset: _vm.images[_vm.select].srcset || \"\",\n                            alt: _vm.images[_vm.select].caption\n                          }\n                        })\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _vm._t(\"customCaption\", [\n                      _c(\"div\", {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.showCaption,\n                            expression: \"showCaption\"\n                          }\n                        ],\n                        staticClass: \"vue-lb-info\",\n                        domProps: {\n                          innerHTML: _vm._s(_vm.images[_vm.select].caption)\n                        }\n                      })\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"vue-lb-footer\" }, [\n                      _c(\"div\", { staticClass: \"vue-lb-footer-info\" }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vue-lb-footer-count\" },\n                        [\n                          _vm._t(\n                            \"footer\",\n                            [\n                              _vm._v(\n                                \"\\n              \" +\n                                  _vm._s(_vm.select + 1) +\n                                  \" / \" +\n                                  _vm._s(_vm.images.length) +\n                                  \"\\n            \"\n                              )\n                            ],\n                            {\n                              current: _vm.select + 1,\n                              total: _vm.images.length\n                            }\n                          )\n                        ],\n                        2\n                      )\n                    ])\n                  ],\n                  2\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"vue-lb-thumbnail-wrapper\" }, [\n                _vm.showThumbs\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"vue-lb-thumbnail\" },\n                      [\n                        _vm.images.length > 1\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass:\n                                  \"vue-lb-thumbnail-arrow vue-lb-thumbnail-left\",\n                                attrs: {\n                                  type: \"button\",\n                                  title: _vm.previousThumbText\n                                },\n                                on: {\n                                  click: function($event) {\n                                    $event.stopPropagation()\n                                    return _vm.previousImage()\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\"previousThumb\", [\n                                  _c(\"span\", [\n                                    _c(\n                                      \"svg\",\n                                      {\n                                        attrs: {\n                                          fill: \"white\",\n                                          x: \"0px\",\n                                          y: \"0px\",\n                                          width: \"100%\",\n                                          height: \"100%\",\n                                          viewBox: \"0 0 512 512\"\n                                        }\n                                      },\n                                      [\n                                        _c(\"path\", {\n                                          attrs: {\n                                            d:\n                                              \"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"\n                                          }\n                                        })\n                                      ]\n                                    )\n                                  ])\n                                ])\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.imagesThumb, function(image, index) {\n                          return _c(\"div\", {\n                            directives: [\n                              {\n                                name: \"lazy\",\n                                rawName: \"v-lazy:background-image\",\n                                value: image,\n                                expression: \"image\",\n                                arg: \"background-image\"\n                              },\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value:\n                                  index >= _vm.thumbIndex.begin &&\n                                  index <= _vm.thumbIndex.end,\n                                expression:\n                                  \"index >= thumbIndex.begin && index <= thumbIndex.end\"\n                              }\n                            ],\n                            key:\n                              typeof image === \"string\"\n                                ? \"\" + image + index\n                                : index,\n                            class:\n                              \"vue-lb-modal-thumbnail\" +\n                              (_vm.select === index ? \"-active\" : \"\"),\n                            on: {\n                              click: function($event) {\n                                $event.stopPropagation()\n                                return _vm.showImage(index)\n                              }\n                            }\n                          })\n                        }),\n                        _vm._v(\" \"),\n                        _vm.images.length > 1\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass:\n                                  \"vue-lb-thumbnail-arrow vue-lb-thumbnail-right\",\n                                attrs: {\n                                  type: \"button\",\n                                  title: _vm.nextThumbText\n                                },\n                                on: {\n                                  click: function($event) {\n                                    $event.stopPropagation()\n                                    return _vm.nextImage()\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\"nextThumb\", [\n                                  _c(\"span\", [\n                                    _c(\n                                      \"svg\",\n                                      {\n                                        attrs: {\n                                          fill: \"white\",\n                                          x: \"0px\",\n                                          y: \"0px\",\n                                          width: \"100%\",\n                                          height: \"100%\",\n                                          viewBox: \"0 0 512 512\"\n                                        }\n                                      },\n                                      [\n                                        _c(\"path\", {\n                                          attrs: {\n                                            d:\n                                              \"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"\n                                          }\n                                        })\n                                      ]\n                                    )\n                                  ])\n                                ])\n                              ],\n                              2\n                            )\n                          : _vm._e()\n                      ],\n                      2\n                    )\n                  : _vm._e()\n              ]),\n              _vm._v(\" \"),\n              _vm.images.length > 1\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"vue-lb-arrow vue-lb-left\",\n                      attrs: { type: \"button\", title: _vm.previousText },\n                      on: {\n                        click: function($event) {\n                          $event.stopPropagation()\n                          return _vm.previousImage()\n                        }\n                      }\n                    },\n                    [\n                      _vm._t(\"previous\", [\n                        _c(\"span\", [\n                          _c(\n                            \"svg\",\n                            {\n                              attrs: {\n                                fill: \"white\",\n                                x: \"0px\",\n                                y: \"0px\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 512 512\"\n                              }\n                            },\n                            [\n                              _c(\"path\", {\n                                attrs: {\n                                  d:\n                                    \"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ],\n                    2\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.images.length > 1\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"vue-lb-arrow vue-lb-right\",\n                      attrs: { type: \"button\", title: _vm.nextText },\n                      on: {\n                        click: function($event) {\n                          $event.stopPropagation()\n                          return _vm.nextImage()\n                        }\n                      }\n                    },\n                    [\n                      _vm._t(\"next\", [\n                        _c(\"span\", [\n                          _c(\n                            \"svg\",\n                            {\n                              attrs: {\n                                fill: \"white\",\n                                x: \"0px\",\n                                y: \"0px\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 512 512\",\n                                \"xml:space\": \"preserve\"\n                              }\n                            },\n                            [\n                              _c(\"path\", {\n                                attrs: {\n                                  d:\n                                    \"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ],\n                    2\n                  )\n                : _vm._e()\n            ]\n          )\n        : _vm._e()\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","let Hammer\n\nif (typeof window !== 'undefined') {\n  Hammer = require('hammerjs')\n}\n\nrequire('./style.css')\n\n\nexport default {\n  props: {\n    images: {\n      type: Array,\n      required: true,\n    },\n\n    disableScroll: {\n      type: Boolean,\n      default: true,\n    },\n\n    showLightBox: {\n      type: Boolean,\n      default: true,\n    },\n\n    startAt: {\n      type: Number,\n      default: 0,\n    },\n\n    nThumbs: {\n      type: Number,\n      default: 7,\n    },\n\n    showThumbs: {\n      type: Boolean,\n      default: true,\n    },\n\n    // Mode\n    autoPlay: {\n      type: Boolean,\n      default: false,\n    },\n\n    autoPlayTime: {\n      type: Number,\n      default: 3000,\n    },\n\n    siteLoading: {\n      default: null,\n    },\n\n    showCaption: {\n      type: Boolean,\n      default: false,\n    },\n\n    lengthToLoadMore: {\n      type: Number,\n      default: 0\n    },\n\n    closeText: {\n      type: String,\n      default: 'Close (Esc)'\n    },\n\n    previousText: {\n      type: String,\n      default: 'Previous',\n    },\n\n    nextText: {\n      type: String,\n      default: 'Next',\n    },\n\n    previousThumbText: {\n      type: String,\n      default: 'Previous'\n    },\n\n    nextThumbText: {\n      type: String,\n      default: 'Next'\n    },\n  },\n\n  data() {\n    return {\n      select: this.startAt,\n      lightBoxOn: this.showLightBox,\n      timer: null,\n    }\n  },\n\n  computed: {\n    thumbIndex() {\n      const halfDown = Math.floor(this.nThumbs / 2)\n\n      if (this.select >= halfDown && this.select < this.images.length - halfDown)\n        return {\n          begin: this.select - halfDown + (1 - this.nThumbs % 2),\n          end: this.select + halfDown,\n        }\n\n      if (this.select < halfDown)\n        return {\n          begin: 0,\n          end: this.nThumbs - 1,\n        }\n\n      return {\n        begin: this.images.length - this.nThumbs,\n        end: this.images.length - 1,\n      }\n    },\n\n    imagesThumb() {\n      if (this.siteLoading) {\n        return this.images.map(({thumb}) => ({\n          src: thumb,\n          loading: this.siteLoading,\n          error: this.siteLoading,\n        }))\n      }\n\n      return this.images.map(({thumb}) => thumb)\n    },\n  },\n\n  watch: {\n    lightBoxOn(value) {\n      if (document != null) {\n        this.onToggleLightBox(value)\n      }\n    },\n\n    select() {\n      this.$emit('onImageChanged', this.select)\n      \n      if (this.select >= this.images.length - this.lengthToLoadMore - 1) \n        this.$emit('onLoad')\n\n      if (this.select === this.images.length - 1) \n        this.$emit('onLastIndex')\n\n      if (this.select === 0) \n        this.$emit('onFirstIndex')\n\n      if (this.select === this.startAt) \n        this.$emit('onStartIndex')\n    },\n  },\n\n  mounted() {\n    if (this.autoPlay) {\n      this.timer = setInterval(() => {\n        this.nextImage()\n      }, this.autoPlayTime)\n    }\n\n    this.onToggleLightBox(this.lightBoxOn)\n\n    if (this.$refs.container) {\n      const hammer = new Hammer(this.$refs.container)\n\n      hammer.on('swiperight', () => {\n        this.previousImage()\n      })\n\n      hammer.on('swipeleft', () => {\n        this.nextImage()\n      })\n    }\n  },\n\n  methods: {\n    onToggleLightBox(value) {\n      if (this.disableScroll) {\n        if (value) {\n          document.querySelector('html').classList.add('no-scroll')\n        } else {\n          document.querySelector('html').classList.remove('no-scroll')\n        }\n      }\n      \n      if (value) {\n        document.querySelector('body').classList.add('vue-lb-open')\n      } else {\n        document.querySelector('body').classList.remove('vue-lb-open')\n      }\n      \n      this.$emit('onOpened', value)\n\n      if (value) {\n        document.addEventListener('keydown', this.addKeyEvent)\n      } else {\n        document.removeEventListener('keydown', this.addKeyEvent)\n      }\n    },\n\n    showImage(index) {\n      this.$set(this, 'lightBoxOn', true)\n      this.$set(this, 'select', index)\n    },\n\n    addKeyEvent(event) {\n      if (event.keyCode === 37) this.previousImage() // left arrow\n      if (event.keyCode === 39) this.nextImage() // right arrow\n      if (event.keyCode === 27) this.closeLightBox() // esc\n    },\n\n    closeLightBox() {\n      this.$set(this, 'lightBoxOn', false)\n    },\n\n    nextImage() {\n      this.$set(this, 'select', (this.select + 1) % this.images.length)\n    },\n\n    previousImage() {\n      this.$set(this, 'select', (this.select + this.images.length - 1) % this.images.length)\n    },\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.addKeyEvent)\n\n    if (this.autoPlay) {\n      clearInterval(this.timer)\n    }\n  },\n}\n","import { render, staticRenderFns } from \"./template.html?vue&type=template&id=77795e85&\"\nimport script from \"./script.js?vue&type=script&lang=js&\"\nexport * from \"./script.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pexea12/repos/test/vue-image-lightbox/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('77795e85')) {\n      api.createRecord('77795e85', component.options)\n    } else {\n      api.reload('77795e85', component.options)\n    }\n    module.hot.accept(\"./template.html?vue&type=template&id=77795e85&\", function () {\n      api.rerender('77795e85', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/LightBox.vue\"\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}